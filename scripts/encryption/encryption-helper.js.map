{"version":3,"sources":["scripts/encryption/encryption-helper.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","HMAC","ikm","this","_ikm","value","input","crypto","subtle","importKey","name","hash","then","sign","window","gauntface","HKDF","salt","_salt","_hmac","info","byteLength","fullInfoBuffer","Uint8Array","set","fill","prk","nextHmac","nextPrk","slice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SALT_BYTES","joinUnit8Arrays","allUint8Arrays","reduce","cumulativeValue","nextValue","joinedArray","EncryptionHelper","serverKeys","publicKey","privateKey","_serverKeys","publicKeyString","_this","Promise","resolve","stringKeysToCryptoKeys","keys","CryptoKey","algorithm","namedCurve","public","deriveBits","getPrivateServerKey","_this2","exportCryptoKeys","clientPublicKey","getPublicServerKey","serverPublicKey","utf8Encoder","TextEncoder","labelUnit8Array","encode","paddingUnit8Array","clientPublicKeyLengthUnit8Array","serverPublicKeyLengthBuffer","_this3","contentEncoding8Array","generateContext","contextBuffer","_this4","subscription","getSharedSecret","p256dh","sharedSecret","authInfoUint8Array","hkdf","base64UrlToUint8Array","auth","generate","_this5","all","generatePRK","generateCEKInfo","generateNonceInfo","results","cekInfo","nonceInfo","cekHKDF","nonceHKDF","contentEncryptionKey","nonce","payload","_this6","generateEncryptionKeys","encryptionKeys","contentEncryptionCryptoKey","paddingBytes","payloadUint8Array","recordUint8Array","tagLength","iv","encrypt","encryptedPayloadArrayBuffer","cipherText","uint8ArrayToBase64Url","getSalt","publicServerKey","promises","push","exportKey","jwk","x","y","d","exportedKeys","result","publicKeyUnitArray","publicBuffer","kty","crv","ext","keyPromises","privateKeyArray","keyPair","uint8Array","start","end","base64","btoa","String","fromCharCode","apply","replace","base64UrlData","padding","repeat","rawData","atob","buffer","charCodeAt","EncryptionHelperFactory","options","importKeys","generateKeys","getRandomValues","reject","generateKey"],"mappings":"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","file":"scripts/encryption/encryption-helper.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar HMAC = function () {\n  function HMAC(ikm) {\n    _classCallCheck(this, HMAC);\n\n    this._ikm = ikm;\n  }\n\n  _createClass(HMAC, [{\n    key: 'sign',\n    value: function sign(input) {\n      return crypto.subtle.importKey('raw', this._ikm, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']).then(function (key) {\n        return crypto.subtle.sign('HMAC', key, input);\n      });\n    }\n  }]);\n\n  return HMAC;\n}();\n\nif (typeof window !== 'undefined') {\n  window.gauntface = window.gauntface || {};\n  window.gauntface.HMAC = HMAC;\n}\n\nvar HKDF = function () {\n  function HKDF(ikm, salt) {\n    _classCallCheck(this, HKDF);\n\n    this._ikm = ikm;\n    this._salt = salt;\n\n    this._hmac = new HMAC(salt);\n  }\n\n  _createClass(HKDF, [{\n    key: 'generate',\n    value: function generate(info, byteLength) {\n      var fullInfoBuffer = new Uint8Array(info.byteLength + 1);\n      fullInfoBuffer.set(info, 0);\n      fullInfoBuffer.set(new Uint8Array(1).fill(1), info.byteLength);\n\n      return this._hmac.sign(this._ikm).then(function (prk) {\n        var nextHmac = new HMAC(prk);\n        return nextHmac.sign(fullInfoBuffer);\n      }).then(function (nextPrk) {\n        return nextPrk.slice(0, byteLength);\n      });\n    }\n  }]);\n\n  return HKDF;\n}();\n\nif (typeof window !== 'undefined') {\n  window.gauntface = window.gauntface || {};\n  window.gauntface.HKDF = HKDF;\n}\n\n// Length, in bytes, of a P-256 field element. Expected format of the private key.\nvar PRIVATE_KEY_BYTES = 32;\n\n// Length, in bytes, of a P-256 public key in uncompressed EC form per SEC 2.3.3. This sequence must\n// start with 0x04. Expected format of the public key.\nvar PUBLIC_KEY_BYTES = 65;\n\n// Length, in bytes, of the salt that should be used for the message.\nvar SALT_BYTES = 16;\n\nvar joinUnit8Arrays = function joinUnit8Arrays(allUint8Arrays) {\n  // Super inefficient. But easier to follow than allocating the\n  // array with the correct size and position values in that array\n  // as required.\n  return allUint8Arrays.reduce(function (cumulativeValue, nextValue) {\n    var joinedArray = new Uint8Array(cumulativeValue.byteLength + nextValue.byteLength);\n    joinedArray.set(cumulativeValue, 0);\n    joinedArray.set(nextValue, cumulativeValue.byteLength);\n    return joinedArray;\n  }, new Uint8Array());\n};\n\nvar EncryptionHelper = function () {\n  function EncryptionHelper(serverKeys, salt) {\n    _classCallCheck(this, EncryptionHelper);\n\n    if (!serverKeys || !serverKeys.publicKey || !serverKeys.privateKey) {\n      throw new Error('Bad server keys. Use ' + 'EncryptionHelperFactory.generateKeys()');\n    }\n\n    if (!salt) {\n      throw new Error('Bad salt value. Use ' + 'EncryptionHelperFactory.generateSalt()');\n    }\n\n    this._serverKeys = serverKeys;\n    this._salt = salt;\n  }\n\n  _createClass(EncryptionHelper, [{\n    key: 'getPublicServerKey',\n    value: function getPublicServerKey() {\n      return this._serverKeys.publicKey;\n    }\n  }, {\n    key: 'getPrivateServerKey',\n    value: function getPrivateServerKey() {\n      return this._serverKeys.privateKey;\n    }\n  }, {\n    key: 'getSharedSecret',\n    value: function getSharedSecret(publicKeyString) {\n      var _this = this;\n\n      return Promise.resolve().then(function () {\n        return EncryptionHelper.stringKeysToCryptoKeys(publicKeyString);\n      }).then(function (keys) {\n        return keys.publicKey;\n      }).then(function (publicKey) {\n        if (!(publicKey instanceof CryptoKey)) {\n          throw new Error('The publicKey must be a CryptoKey.');\n        }\n\n        var algorithm = {\n          name: 'ECDH',\n          namedCurve: 'P-256',\n          public: publicKey\n        };\n\n        return crypto.subtle.deriveBits(algorithm, _this.getPrivateServerKey(), 256);\n      });\n    }\n  }, {\n    key: 'getSalt',\n    value: function getSalt() {\n      return this._salt;\n    }\n  }, {\n    key: 'generateContext',\n    value: function generateContext(publicKeyString) {\n      var _this2 = this;\n\n      return Promise.resolve().then(function () {\n        return EncryptionHelper.stringKeysToCryptoKeys(publicKeyString);\n      }).then(function (keys) {\n        return EncryptionHelper.exportCryptoKeys(keys.publicKey).then(function (keys) {\n          return keys.publicKey;\n        });\n      }).then(function (clientPublicKey) {\n        return EncryptionHelper.exportCryptoKeys(_this2.getPublicServerKey()).then(function (keys) {\n          return {\n            clientPublicKey: clientPublicKey,\n            serverPublicKey: keys.publicKey\n          };\n        });\n      }).then(function (keys) {\n        var utf8Encoder = new TextEncoder('utf-8');\n        var labelUnit8Array = utf8Encoder.encode('P-256');\n        var paddingUnit8Array = new Uint8Array(1).fill(0);\n\n        var clientPublicKeyLengthUnit8Array = new Uint8Array(2);\n        clientPublicKeyLengthUnit8Array[0] = 0x00;\n        clientPublicKeyLengthUnit8Array[1] = keys.clientPublicKey.byteLength;\n\n        var serverPublicKeyLengthBuffer = new Uint8Array(2);\n        serverPublicKeyLengthBuffer[0] = 0x00;\n        serverPublicKeyLengthBuffer[1] = keys.serverPublicKey.byteLength;\n\n        return joinUnit8Arrays([labelUnit8Array, paddingUnit8Array, clientPublicKeyLengthUnit8Array, keys.clientPublicKey, serverPublicKeyLengthBuffer, keys.serverPublicKey]);\n      });\n    }\n  }, {\n    key: 'generateCEKInfo',\n    value: function generateCEKInfo(publicKeyString) {\n      var _this3 = this;\n\n      return Promise.resolve().then(function () {\n        var utf8Encoder = new TextEncoder('utf-8');\n        var contentEncoding8Array = utf8Encoder.encode('Content-Encoding: aesgcm');\n        var paddingUnit8Array = new Uint8Array(1).fill(0);\n        return _this3.generateContext(publicKeyString).then(function (contextBuffer) {\n          return joinUnit8Arrays([contentEncoding8Array, paddingUnit8Array, contextBuffer]);\n        });\n      });\n    }\n  }, {\n    key: 'generateNonceInfo',\n    value: function generateNonceInfo(publicKeyString) {\n      var _this4 = this;\n\n      return Promise.resolve().then(function () {\n        var utf8Encoder = new TextEncoder('utf-8');\n        var contentEncoding8Array = utf8Encoder.encode('Content-Encoding: nonce');\n        var paddingUnit8Array = new Uint8Array(1).fill(0);\n        return _this4.generateContext(publicKeyString).then(function (contextBuffer) {\n          return joinUnit8Arrays([contentEncoding8Array, paddingUnit8Array, contextBuffer]);\n        });\n      });\n    }\n  }, {\n    key: 'generatePRK',\n    value: function generatePRK(subscription) {\n      return this.getSharedSecret(subscription.keys.p256dh).then(function (sharedSecret) {\n        var utf8Encoder = new TextEncoder('utf-8');\n        var authInfoUint8Array = utf8Encoder.encode('Content-Encoding: auth\\0');\n\n        var hkdf = new HKDF(sharedSecret, EncryptionHelper.base64UrlToUint8Array(subscription.keys.auth));\n        return hkdf.generate(authInfoUint8Array, 32);\n      });\n    }\n  }, {\n    key: 'generateEncryptionKeys',\n    value: function generateEncryptionKeys(subscription) {\n      var _this5 = this;\n\n      return Promise.all([this.generatePRK(subscription), this.generateCEKInfo(subscription.keys.p256dh), this.generateNonceInfo(subscription.keys.p256dh)]).then(function (results) {\n        var prk = results[0];\n        var cekInfo = results[1];\n        var nonceInfo = results[2];\n\n        var cekHKDF = new HKDF(prk, _this5._salt);\n        var nonceHKDF = new HKDF(prk, _this5._salt);\n        return Promise.all([cekHKDF.generate(cekInfo, 16), nonceHKDF.generate(nonceInfo, 12)]);\n      }).then(function (results) {\n        return {\n          contentEncryptionKey: results[0],\n          nonce: results[1]\n        };\n      });\n    }\n  }, {\n    key: 'encryptMessage',\n    value: function encryptMessage(subscription, payload) {\n      var _this6 = this;\n\n      return this.generateEncryptionKeys(subscription).then(function (encryptionKeys) {\n        return crypto.subtle.importKey('raw', encryptionKeys.contentEncryptionKey, 'AES-GCM', true, ['decrypt', 'encrypt']).then(function (contentEncryptionCryptoKey) {\n          encryptionKeys.contentEncryptionCryptoKey = contentEncryptionCryptoKey;\n          return encryptionKeys;\n        });\n      }).then(function (encryptionKeys) {\n        var paddingBytes = 0;\n        var paddingUnit8Array = new Uint8Array(2 + paddingBytes);\n        var utf8Encoder = new TextEncoder('utf-8');\n        var payloadUint8Array = utf8Encoder.encode(payload);\n        var recordUint8Array = new Uint8Array(paddingUnit8Array.byteLength + payloadUint8Array.byteLength);\n        recordUint8Array.set(paddingUnit8Array, 0);\n        recordUint8Array.set(payloadUint8Array, paddingUnit8Array.byteLength);\n\n        var algorithm = {\n          name: 'AES-GCM',\n          tagLength: 128,\n          iv: encryptionKeys.nonce\n        };\n\n        return crypto.subtle.encrypt(algorithm, encryptionKeys.contentEncryptionCryptoKey, recordUint8Array);\n      }).then(function (encryptedPayloadArrayBuffer) {\n        return EncryptionHelper.exportCryptoKeys(_this6.getPublicServerKey()).then(function (keys) {\n          return {\n            cipherText: encryptedPayloadArrayBuffer,\n            salt: EncryptionHelper.uint8ArrayToBase64Url(_this6.getSalt()),\n            publicServerKey: EncryptionHelper.uint8ArrayToBase64Url(keys.publicKey)\n          };\n        });\n      });\n    }\n  }], [{\n    key: 'exportCryptoKeys',\n    value: function exportCryptoKeys(publicKey, privateKey) {\n      return Promise.resolve().then(function () {\n        var promises = [];\n        promises.push(crypto.subtle.exportKey('jwk', publicKey).then(function (jwk) {\n          var x = EncryptionHelper.base64UrlToUint8Array(jwk.x);\n          var y = EncryptionHelper.base64UrlToUint8Array(jwk.y);\n\n          var publicKey = new Uint8Array(65);\n          publicKey.set([0x04], 0);\n          publicKey.set(x, 1);\n          publicKey.set(y, 33);\n\n          return publicKey;\n        }));\n\n        if (privateKey) {\n          promises.push(crypto.subtle.exportKey('jwk', privateKey).then(function (jwk) {\n            return EncryptionHelper.base64UrlToUint8Array(jwk.d);\n          }));\n        }\n\n        return Promise.all(promises);\n      }).then(function (exportedKeys) {\n        var result = {\n          publicKey: exportedKeys[0]\n        };\n\n        if (exportedKeys.length > 1) {\n          result.privateKey = exportedKeys[1];\n        }\n\n        return result;\n      });\n    }\n  }, {\n    key: 'stringKeysToCryptoKeys',\n    value: function stringKeysToCryptoKeys(publicKey, privateKey) {\n      if (!(typeof publicKey === 'string')) {\n        throw new Error('The publicKey is expected to be an String.');\n      }\n\n      var publicKeyUnitArray = EncryptionHelper.base64UrlToUint8Array(publicKey);\n      if (publicKeyUnitArray.byteLength !== PUBLIC_KEY_BYTES) {\n        throw new Error('The publicKey is expected to be ' + PUBLIC_KEY_BYTES + ' bytes.');\n      }\n\n      var publicBuffer = new Uint8Array(publicKeyUnitArray);\n      if (publicBuffer[0] !== 0x04) {\n        throw new Error('The publicKey is expected to start with an ' + '0x04 byte.');\n      }\n\n      var jwk = {\n        kty: 'EC',\n        crv: 'P-256',\n        x: EncryptionHelper.uint8ArrayToBase64Url(publicBuffer, 1, 33),\n        y: EncryptionHelper.uint8ArrayToBase64Url(publicBuffer, 33, 65),\n        ext: true\n      };\n\n      var keyPromises = [];\n      keyPromises.push(crypto.subtle.importKey('jwk', jwk, { name: 'ECDH', namedCurve: 'P-256' }, true, []));\n\n      if (privateKey) {\n        if (!(typeof privateKey === 'string')) {\n          throw new Error('The privateKey is expected to be an String.');\n        }\n\n        var privateKeyArray = EncryptionHelper.base64UrlToUint8Array(privateKey);\n\n        if (privateKeyArray.byteLength !== PRIVATE_KEY_BYTES) {\n          throw new Error('The privateKey is expected to be ' + PRIVATE_KEY_BYTES + ' bytes.');\n        }\n\n        // d must be defined after the importKey call for public\n        jwk.d = EncryptionHelper.uint8ArrayToBase64Url(new Uint8Array(privateKeyArray));\n        keyPromises.push(crypto.subtle.importKey('jwk', jwk, { name: 'ECDH', namedCurve: 'P-256' }, true, ['deriveBits']));\n      }\n\n      return Promise.all(keyPromises).then(function (keys) {\n        var keyPair = {\n          publicKey: keys[0]\n        };\n        if (keys.length > 1) {\n          keyPair.privateKey = keys[1];\n        }\n        return keyPair;\n      });\n    }\n  }, {\n    key: 'uint8ArrayToBase64Url',\n    value: function uint8ArrayToBase64Url(uint8Array, start, end) {\n      start = start || 0;\n      end = end || uint8Array.byteLength;\n\n      var base64 = btoa(String.fromCharCode.apply(null, uint8Array.slice(start, end)));\n      return base64.replace(/\\=/g, '') // eslint-disable-line no-useless-escape\n      .replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n\n    // Converts the URL-safe base64 encoded |base64UrlData| to an Uint8Array buffer.\n\n  }, {\n    key: 'base64UrlToUint8Array',\n    value: function base64UrlToUint8Array(base64UrlData) {\n      var padding = '='.repeat((4 - base64UrlData.length % 4) % 4);\n      var base64 = (base64UrlData + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n\n      var rawData = atob(base64);\n      var buffer = new Uint8Array(rawData.length);\n\n      for (var i = 0; i < rawData.length; ++i) {\n        buffer[i] = rawData.charCodeAt(i);\n      }\n      return buffer;\n    }\n  }]);\n\n  return EncryptionHelper;\n}();\n\nvar EncryptionHelperFactory = function () {\n  function EncryptionHelperFactory() {\n    _classCallCheck(this, EncryptionHelperFactory);\n  }\n\n  _createClass(EncryptionHelperFactory, null, [{\n    key: 'generateHelper',\n    value: function generateHelper(options) {\n      return Promise.resolve().then(function () {\n        if (options && options.serverKeys) {\n          return EncryptionHelperFactory.importKeys(options);\n        }\n\n        return EncryptionHelperFactory.generateKeys(options);\n      }).then(function (keys) {\n        var salt = null;\n        if (options && options.salt) {\n          salt = EncryptionHelper.base64UrlToUint8Array(options.salt);\n        } else {\n          salt = crypto.getRandomValues(new Uint8Array(16));\n        }\n        return new EncryptionHelper(keys, salt);\n      });\n    }\n  }, {\n    key: 'importKeys',\n    value: function importKeys(options) {\n      if (!options || !options.serverKeys || !options.serverKeys.publicKey || !options.serverKeys.privateKey) {\n        return Promise.reject(new Error('Bad options for key import'));\n      }\n\n      return Promise.resolve().then(function () {\n        return EncryptionHelper.stringKeysToCryptoKeys(options.serverKeys.publicKey, options.serverKeys.privateKey);\n      });\n    }\n  }, {\n    key: 'generateKeys',\n    value: function generateKeys() {\n      // True is to make the keys extractable\n      return crypto.subtle.generateKey({ name: 'ECDH', namedCurve: 'P-256' }, true, ['deriveBits']);\n    }\n  }, {\n    key: 'generateSalt',\n    value: function generateSalt() {\n      return crypto.getRandomValues(new Uint8Array(SALT_BYTES));\n    }\n  }]);\n\n  return EncryptionHelperFactory;\n}();\n\nif (typeof window !== 'undefined') {\n  window.gauntface = window.gauntface || {};\n  window.gauntface.EncryptionHelperFactory = EncryptionHelperFactory;\n  window.gauntface.EncryptionHelper = EncryptionHelper;\n}\n\nmodule.exports = EncryptionHelperFactory;\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}